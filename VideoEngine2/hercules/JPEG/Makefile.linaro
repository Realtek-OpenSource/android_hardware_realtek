# ----------------------------------------------------------------------
#
# This makefile has been automatically generated by WinGDB 2.2, build 1191
# Do not edit.
#
# Project: jpurun
#
# ----------------------------------------------------------------------

PLATFORM_LIB_SRC_PATH=../../../../..
GENERIC_LINUX_PATH=$(PLATFORM_LIB_SRC_PATH)/genericLinux
include $(GENERIC_LINUX_PATH)/MakeConfig

export ARCH=arm
export CROSS_TARGET = $(TOOLCHAIN_PATH)/$(RTK_GL_TOOLCHAIN_NAME)-
export CROSS_COMPILE = $(TOOLCHAIN_PATH)/$(RTK_GL_TOOLCHAIN_NAME)-
export CC=$(CROSS_COMPILE)gcc
export AR=$(CROSS_COMPILE)ar
export CXX=${CROSS_COMPILE}g++
export AS=${CROSS_COMPILE}as
export LD=${CROSS_COMPILE}ld
export RANLIB=${CROSS_COMPILE}ranlib
export READELF=${CROSS_COMPILE}readelf
export STRIP=${CROSS_COMPILE}strip


CFLAGS = -g -I./jpuapi -I./include
ARFLAGS = cru
LDFLAGS = -lpthread -lm 
LDFLAGS += -static

INTERMEDIATE_DIR=obj
DESTINATION_DIR=$(GENERIC_LINUX_PATH)/lib

RM=rm -f
MKDIR=mkdir -p
INTERMEDIATE_DIR_MK=$(INTERMEDIATE_DIR)
DESTINATION_DIR_MK=$(DESTINATION_DIR)

VPATH= $(INTERMEDIATE_DIR):src:jdi:jdi/linux:jpuapi

#===== jpurun =====
RESULT = jpurun
SOURCES = main.c jpurun.c
OBJECTNAMES=$(patsubst %.c,%.o,$(patsubst %.cpp,%.o,$(SOURCES)))
OBJECTPATHS=$(addprefix $(INTERMEDIATE_DIR)/,$(OBJECTNAMES))

#===== libjpu.so =====
JPUAPI_RESULT = libjpu.so
JPUAPI_SOURCES = jdi.c jpuapi.c jpuapifunc.c mm.c
JPUAPI_SOURCES += jpuhelper.c mixer.c jpulog.c
JPUAPI_OBJECTNAMES=$(patsubst %.c,%.o,$(patsubst %.cpp,%.o,$(JPUAPI_SOURCES)))
JPUAPI_OBJECTPATHS=$(addprefix $(INTERMEDIATE_DIR)/,$(JPUAPI_OBJECTNAMES))

MJPG_CHECKSUM = false
ifeq ($(MJPG_CHECKSUM),true)
LOCAL_SHARED_LIBRARIES += $(GENERIC_LINUX_PATH)/lib/libMCPControl.a
LOCAL_C_INCLUDES += $(TOP)/device/realtek/proprietary/libs/libMCPControl/inc/
LOCAL_CFLAGS += -DMJPG_CHECKSUM
endif

#===== jpubootrun =====
JPUBOOTRUN_RESULT=jpubootrun
JPUBOOTRUN_SOURCES=jpubootrun.c
JPUBOOTRUN_OBJECTNAMES=$(patsubst %.c,%.o,$(patsubst %.cpp,%.o,$(JPUBOOTRUN_SOURCES)))
JPUBOOTRUN_OBJECTPATHS=$(addprefix $(INTERMEDIATE_DIR)/,$(JPUBOOTRUN_OBJECTNAMES))

all: $(DESTINATION_DIR)/$(JPUAPI_RESULT) $(DESTINATION_DIR)/$(RESULT) #$(DESTINATION_DIR)/$(JPUBOOTRUN_RESULT)
	@echo "build OK!!!"

# ./jpurun
$(DESTINATION_DIR)/$(RESULT): $(OBJECTNAMES) $(JPUAPI_OBJECTNAMES)
	@echo ""
	@echo "build $(DESTINATION_DIR)/$(RESULT)"
	@echo ""
	$(CC) $(CFLAGS) $(SYSROOTFLAGS) $(OBJECTPATHS) $(JPUAPI_OBJECTPATHS) -o $@ $(LDFLAGS)

# ./libjpu.so
$(DESTINATION_DIR)/$(JPUAPI_RESULT): $(JPUAPI_OBJECTNAMES)
	@echo ""
	@echo "build $(DESTINATION_DIR)/$(JPUAPI_RESULT)"
	@echo ""
	$(CC) -shared -s -o $@ $(JPUAPI_OBJECTPATHS)
	
# ./jpubootrun
$(DESTINATION_DIR)/$(JPUBOOTRUN_RESULT): $(JPUBOOTRUN_OBJECTNAMES) $(JPUAPI_OBJECTNAMES)
	@echo ""
	@echo "build $(DESTINATION_DIR)/$(JPUBOOTRUN_RESULT)"
	@echo ""
	$(CC) $(CFLAGS) $(SYSROOTFLAGS) $(JPUBOOTRUN_OBJECTPATHS) $(JPUAPI_OBJECTPATHS) -o $@ $(LDFLAGS)

clean:
	$(RM) $(DESTINATION_DIR)/$(RESULT)
	$(RM) $(OBJECTPATHS)
	$(RM) $(DESTINATION_DIR)/$(JPUAPI_RESULT)
	$(RM) $(JPUAPI_OBJECTPATHS)
	$(RM) $(DESTINATION_DIR)/$(JPUBOOTRUN_RESULT)
	$(RM) $(JPUBOOTRUN_OBJECTPATHS)

$(OBJECTNAMES): %.o: %.c
ifeq ("$(wildcard $(INTERMEDIATE_DIR) )","")
	-$(MKDIR) $(INTERMEDIATE_DIR_MK)
endif
	$(CC) $(CFLAGS) -c -o $(INTERMEDIATE_DIR)/$@ $<

$(JPUAPI_OBJECTNAMES): %.o: %.c
ifeq ("$(wildcard $(INTERMEDIATE_DIR) )","")
	-$(MKDIR) $(INTERMEDIATE_DIR_MK)
endif
	$(CC) $(CFLAGS) -fPIC -c -o $(INTERMEDIATE_DIR)/$@ $<

$(JPUBOOTRUN_OBJECTNAMES): %.o: %.c
ifeq ("$(wildcard $(INTERMEDIATE_DIR) )","")
	-$(MKDIR) $(INTERMEDIATE_DIR_MK)
endif
	$(CC) $(CFLAGS) -c -o $(INTERMEDIATE_DIR)/$@ $<
